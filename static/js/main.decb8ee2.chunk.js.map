{"version":3,"sources":["Apps/incubator/env/constants.js","Apps/incubator/components/UI.js","Apps/incubator/components/banners.js","Apps/incubator/components/TextFormat.js","Apps/incubator/components/Item.js","Apps/incubator/components/useFetch.js","Apps/incubator/Bottom.js","Apps/incubator/Top.js","Apps/incubator/User.js","Apps/incubator/Tag.js","Apps/incubator/Main.js","App.js","Apps/incubator/index.js","serviceWorker.js","index.js"],"names":["module","exports","env","api","Title","styled","div","Body","Header","banners","require","WrapperBanner","item","shuffle","style","textAlign","marginBottom","href","url","rel","target","src","img","maxWidth","alt","uuid","TextFormat","text","split","map","word","substring","type","key","Fragment","toLowerCase","replace","border","cursor","margin","Komentar","title","urls","datetime","date","Date","parseInt","author","screenName","fontWeight","color","avatar","size","content","replyCount","retweetCount","favoriteCount","fontSize","Item","i","quote","images","thread","justify","xs","sm","md","lg","backgroundColor","bordered","cover","width","useFetch","useState","data","setData","useEffect","a","axios","response","fetchUrl","Listx","prefix","rows","itemLayout","dataSource","renderItem","value","marginLeft","Bottom","tag","data1","Search","Input","Top","query","setQuery","fetchData","result","length","placeholder","onChange","e","Meta","User","user","doc","name","padding","Tag","medias","media_id","thumbnail","Group","toUpperCase","Main","match","className","params","id","id2","Boolean","window","location","hostname","ReactDOM","render","path","exact","component","isIndex","props","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.decb8ee2.chunk.js","sourcesContent":["const env = {\n  development: {\n    api: 'https://rudixauth.herokuapp.com/test/',\n  },\n  production: {\n    api: 'https://rudixauth.herokuapp.com/test/',\n  },\n};\n\nmodule.exports = { env: env[process.env.NODE_ENV] };\n","import styled from 'styled-components';\n\nexport const Title = styled.div`\n  font-size: 1.5em;\n  text-align: left;\n  padding: 0px;\n  margin-bottom: 0px;\n  margin-left: 14px;\n  color: palevioletred;\n  font-weight: lighter;\n  clear: both;\n  display: block;\n`;\nexport const Body = styled.div`\n  .headertop {\n    height: 50px;\n    text-align: center;\n    background-color: #231f20;\n    img {\n      margin: auto;\n      height: 50px;\n    }\n  }\n`;\nexport const Header = styled.div`\n  text-align: left;\n  padding: 0px;\n  margin-bottom: 0px;\n\n  padding: 4px;\n  h1 {\n    font-size: 3em;\n    font-weight: lighter;\n    color: #02bac8;\n  }\n  img {\n    width: 60px;\n    float: left;\n    margin-right: 5px;\n  }\n`;\n","import React from 'react';\nimport shuffle from 'lodash/shuffle';\n\nconst banners = require('./banners.json');\n\nconst WrapperBanner = () => {\n  const item = shuffle(banners)[0];\n  return (\n    <div style={{ textAlign: 'center', marginBottom: 5 }}>\n\n      <a href={item.url} rel=\"nofollow\" target=\"_top\">\n\n        <img src={item.img} style={{ maxWidth: '100%' }} alt=\"\" />\n\n      </a>\n    </div>\n  );\n};\nexport default WrapperBanner;\n","import React from 'react';\nimport {\n  Tag,\n} from 'antd';\n\nconst uuid = require('uuid/v4');\n\nconst TextFormat = ({ text }) => {\n  if (text) {\n    const arr = text.split(' ').map((word) => {\n      if (word.substring(0, 1) === '#') {\n        return { type: 'tag', word, key: uuid() };\n      }\n      if (word.substring(0, 3) === 'http') {\n        return { type: 'url', word: 'xxx', key: uuid() };\n      }\n      return { word, type: 'word', key: uuid() };\n    });\n    const cont = arr.map((word) => {\n      if (word.type === 'url') {\n        return <React.Fragment key={word.key}>dsdsxxxxx</React.Fragment>;\n      }\n      if (word.type === 'tag') {\n        return (\n          <a\n            key={word.key}\n            href={`/t/${word.word\n              .toLowerCase()\n              .replace('#', '')\n              .replace('.', '')}`}\n          >\n            <Tag style={{\n              border: 'none',\n              cursor: 'pointer',\n              margin: 4,\n            }}\n            >\n              {word.word.replace('#', '')}\n            </Tag>\n          </a>\n        );\n      }\n      return `${word.word} `;\n    });\n    return cont;\n  }\n  return '';\n};\nexport default TextFormat;\n","import React from 'react';\nimport {\n  Avatar, Card, Col, Comment, Row, Icon,\n} from 'antd';\nimport TimeAgo from 'react-timeago';\nimport WrapperBanner from './banners';\nimport TextFormat from './TextFormat';\n\n\nconst Komentar = ({ item }) => {\n  let title = item.title || item.text;\n  const url = item.urls && item.urls[0] ? item.urls[0] : null;\n\n  title = url ? title.replace(url, '') : title;\n\n  return (\n\n\n    <Comment\n\n\n      datetime={<TimeAgo date={new Date(parseInt(item.date, 10))} />}\n      author={(\n        <a href={`/u/${item.screenName}`}>\n          <h2 style={{ fontWeight: 'lighter', color: '#ccc' }}>\n            {item.screenName}\n          </h2>\n        </a>\n        )}\n      avatar={(<Avatar src={`https://avatars.io/twitter/${item.screenName}`} size=\"large\" />)}\n      content={item.replyCount ? (\n        <>\n\n          <span style={{ color: '#fff' }}><TextFormat text={title} /></span>\n          <span style={{ color: '#FFF' }}>\n            <Icon type=\"message\" style={{ color: '#FFF' }} />\n            {` ${item.replyCount}    `}\n          </span>\n          <span style={{ color: '#FFF' }}>\n            <Icon type=\"redo\" style={{ color: '#FFF' }} />\n            {` ${item.retweetCount}    `}\n          </span>\n          <span style={{ color: '#FFF' }}>\n            <Icon type=\"heart\" style={{ color: '#FFF' }} />\n            {` ${item.favoriteCount}  `}\n          </span>\n        </>\n      ) : (<span style={{ fontWeight: 'lighter', color: '#fff', fontSize: '0.9rem' }}><TextFormat text={title} /></span>)}\n    />\n  );\n};\nconst Item = ({ item, i }) => {\n  const { screenName, quote, images } = item;\n  const href = `/u/${screenName}`;\n  const thread = quote ? (\n    <Komentar item={quote} href={href}>\n      <Komentar item={item} href={href} />\n    </Komentar>\n  ) : (\n    <Komentar item={item} href={href} />\n  );\n  return (\n    <Row type=\"flex\" justify=\"center\">\n      <Col xs={23} sm={20} md={18} lg={10}>\n        {i === 1 || i === 3 ? (<WrapperBanner />) : null}\n        <Card\n          style={{ marginBottom: 5, backgroundColor: '#231f20' }}\n          bordered={false}\n          type=\"inner\"\n          cover={\n            images ? (<img alt=\"\" style={{ width: '100%' }} src={images[0]} />) : null\n          }\n        >\n          {thread}\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Item;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchUrl = async () => {\n      const response = await axios(url);\n      setData(response.data);\n    };\n    fetchUrl();\n  }, []);\n  return data;\n};\nexport default useFetch;\n","import React from 'react';\n\nimport {\n  List, Tag, Row, Col,\n} from 'antd';\nimport { env } from './env/constants';\n\nimport { Title } from './components/UI';\nimport useFetch from './components/useFetch';\n\n\nconst Listx = ({ prefix, rows }) => (\n  <div style={{ textAlign: 'center' }}>\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={rows}\n      renderItem={(item) => (\n        <span>\n          <a href={`/${prefix}/${item.key}`}>\n            <Tag\n              style={{\n                backgroundColor: '#231f20',\n                border: 'none',\n                color: '#67d5e4',\n                cursor: 'pointer',\n                margin: 4,\n              }}\n            >\n              {item.key}\n            </Tag>\n          </a>\n          {item.value >= 2 ? (\n            <Tag\n              style={{\n                border: 'none',\n                marginLeft: -5,\n              }}\n            >\n              {`${item.value}`}\n            </Tag>\n          ) : null}\n        </span>\n      )}\n    />\n  </div>\n);\n\n\nconst Bottom = ({ tag }) => {\n  const data1 = useFetch(`${env.api}twitter/_design/api/_view/tags?reduce=true&group=true&limit=25&skip=25&start_key=\"${tag}\"&update=false`);\n  const data = useFetch(`${env.api}twitter/_design/api/_view/users?reduce=true&group=true&limit=25&skip=25&start_key=\"${tag}\"&update=false`);\n  return (\n    <div>\n      <Row type=\"flex\" justify=\"center\">\n        <Col xs={23} sm={20} md={18} lg={10}>\n          <Title>Users</Title>\n          {data ? <Listx rows={data.rows} prefix=\"u\" /> : null}\n          <Title>Tags</Title>\n          {data1 ? <Listx rows={data1.rows} prefix=\"t\" /> : null}\n        </Col>\n      </Row>\n    </div>\n\n  );\n};\n\nexport default Bottom;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Input, Row, Col, List, Avatar,\n} from 'antd';\nimport { env } from './env/constants';\n\nconst { Search } = Input;\n\nconst Top = () => {\n  const [data, setData] = useState(null);\n  const [query, setQuery] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `${env.api}twitter/_design/api/_view/tags?reduce=true&group=true&limit=5&start_key=\"${query}\"&update=false`,\n      );\n      setData(result.data);\n    };\n    if (query && query.length >= 3) {\n      fetchData();\n    } else {\n      setData(null);\n    }\n  }, [query]);\n\n  return (\n    <Row type=\"flex\" justify=\"center\">\n\n      <Col xs={23} sm={20} md={18} lg={10} style={{ marginBottom: 20 }}>\n        <Search\n          placeholder=\"search for users or tags\"\n          onChange={(e) => setQuery(e.target.value)}\n          style={{ color: '#FFF' }}\n        />\n        {data ? (\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={data.rows}\n            renderItem={(item) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={(\n                    <Avatar\n                      src={`https://avatars.io/twitter/${item.key}`}\n                      size=\"large\"\n                    />\n)}\n                  title={(\n                    <a\n                      href={`/u/${item.key}`}\n                      style={{\n\t\t\t\t\t\t\t\t\t\t\t  color: '#FFF',\n                      }}\n                    >\n                      {item.key}\n                    </a>\n)}\n                />\n              </List.Item>\n            )}\n          />\n        ) : null}\n      </Col>\n    </Row>\n  );\n};\nexport default Top;\n","import React from 'react';\n\nimport { Spin } from 'antd';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { Header } from './components/UI';\nimport Item from './components/Item';\nimport Bottom from './Bottom';\nimport { env } from './env/constants';\nimport Top from './Top';\nimport useFetch from './components/useFetch';\n\nconst uuid = require('uuid/v4');\n\nconst User = ({ user }) => {\n  const data = useFetch(`${env.api}twitter/_design/api/_view/users?key=\"${user}\"&reduce=false&include_docs=true&limit=200&update=false&descending=true`);\n\n  return (\n\n    <HelmetProvider>\n      <Helmet>\n        <title>\n          {`${user}`}\n        </title>\n      </Helmet>\n\n      {data.rows ? (\n        <>\n          <Header>\n            <img src={`https://avatars.io/twitter/${data.rows[0].doc.screenName}`} size=\"large\" alt=\"\" />\n            <h1>{data.rows[0].doc.screenName}</h1>\n          </Header>\n          <Top />\n          <Helmet>\n            <title>\n              {`${user}`}\n            </title>\n            <meta name=\"description\" content={`${data.rows[0].doc.screenName} : ${data.rows[0].doc.title}`} />\n          </Helmet>\n          {data.rows.map((item, i) => (\n            <Item key={uuid()} item={item.doc} i={i} />\n          ))}\n        </>\n      ) : (\n        <div style={{ textAlign: 'center', padding: 20 }}><Spin /></div>\n      )}\n      <Bottom tag={user} />\n\n    </HelmetProvider>\n  );\n};\n\nexport default User;\n","import React from 'react';\n\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport {\n  Spin, Card, Row, Col,\n} from 'antd';\nimport Item from './components/Item';\nimport TextFormat from './components/TextFormat';\nimport { Header } from './components/UI';\nimport Bottom from './Bottom';\nimport Top from './Top';\nimport { env } from './env/constants';\nimport useFetch from './components/useFetch';\nimport WrapperBanner from './components/banners';\n\nconst uuid = require('uuid/v4');\n\nconst Tag = ({ tag }) => {\n  const data = useFetch(`${env.api}twitter/_design/api/_view/tags?key=\"${\n    tag\n  }\"&reduce=false&include_docs=true&limit=30&descending=true&update=false`);\n  const data1 = useFetch(`https://amazonka.herokuapp.com/insta/${tag}`);\n\n  return (\n    <HelmetProvider>\n      <Header>\n        <h1>\n          {`#${tag}`}\n        </h1>\n      </Header>\n      <Top />\n      { data.rows && data.rows[0] ? (\n        <>\n          <Helmet>\n            <title>\n              {`#${tag}`}\n            </title>\n            <meta name=\"description\" content={`${data.rows[0].doc.screenName} : ${data.rows[0].doc.title}`} />\n          </Helmet>\n          {data.rows.map((item, i) => (\n            <Item key={uuid()} item={item.doc} i={i} />\n          ))}\n        </>\n      ) : (\n        <div style={{ textAlign: 'center' }}><Spin /></div>\n      )}\n      {data1 && data1.medias ? (\n        <>\n          {data1.medias.map((item, i) => (\n            <Row type=\"flex\" justify=\"center\" key={item.media_id}>\n              <Col xs={23} sm={20} md={18} lg={10}>\n                {i === 6 || i === 3 || i === 5 ? (<WrapperBanner />) : null}\n                <Card\n                  style={{ marginBottom: 5, backgroundColor: '#231f20' }}\n                  bordered={false}\n                  type=\"inner\"\n                  cover={(<img alt={item.text} style={{ width: '100%' }} src={item.thumbnail} />)}\n                >\n                  <span style={{ color: '#FFF' }}>\n                    <TextFormat text={item.text} />\n                  </span>\n                </Card>\n              </Col>\n            </Row>\n          ))}\n        </>\n      ) : null}\n      <Bottom tag={tag} />\n    </HelmetProvider>\n  );\n};\n\nexport default Tag;\n","import React from 'react';\nimport { Button } from 'antd';\n\nconst Tag = () => {\n  const data = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <Button.Group size=\"small\">\n        {data.map((item) => (\n          <Button type=\"primary\" key={item} href={`/t/${item}`}>\n\n            {item.toUpperCase()}\n\n          </Button>\n        ))}\n      </Button.Group>\n    </div>\n  );\n};\n\nexport default Tag;\n","// izteglisi//\nimport Main from './Apps/incubator/index';\n\nexport default Main;\n// test\n","import React from 'react';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nimport User from './User';\nimport Tag from './Tag';\nimport Main from './Main';\nimport { Body } from './components/UI';\nimport './components/index.css';\n\nconst App = ({ match }) => (\n  <Body>\n    <div className=\"headertop\">\n      <img src=\"/twitterlogo.png\" alt=\"\" />\n    </div>\n\n    {(() => {\n      if (match && match.params.id === 'u') return <User user={match.params.id2} />;\n      if (match && match.params.id === 't') return <Tag tag={match.params.id2} />;\n      return <Main />;\n    })()}\n    <div style={{\n      textAlign: 'center',\n      color: '#02bac8',\n    }}\n    >\n\n      RudixLabs © 2019 : the site is not associated or affiliated with Twitter\n\n    </div>\n  </Body>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Main from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst App = () => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={() => <Main isIndex />} />\n      <Route path=\"/:id/\" exact render={(props) => <Main match={props.match} isIndex={false} />} />\n      <Route path=\"/:id/:id2\" exact render={(props) => <Main match={props.match} isIndex={false} />} />\n      <Route path=\"/:id/:id2/:start_key\" exact render={(props) => <Main match={props.match} isIndex={false} />} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}